<h1>About</h1>
<p><a href="https://github.com/mdecycu/cmsite"> https://github.com/mdecycu/cmsite</a></p>
<h1>課程總結</h1>
<p>請各學員根據<a href="https://mde.tw/cadnote/content/%E4%B8%8A%E8%AA%B2%E5%85%A7%E5%AE%B9.html">課程評分項目</a>, 自行列舉並自我評分</p>
<p><span>A: 是否按照進度明確標示倉儲的改版歷程</span></p>
<p><span>B: 是否根據<span> </span><span>IPv4 與 IPv6</span><span> </span>網路環境設定進行作法討論</span></p>
<p><span>C: 是否就<span><span> </span>Replit、s.cycu.org 與 localhost</span><span> </span>情境下對個人與分組倉儲進行設定操作</span></p>
<p><span>D: 是否就所分配的<span> </span><span>CAD 套件</span>從安裝設定到繪圖提供內容參考</span></p>
<p><span>E: 是否使用所分配的 CAD 套件完成<span>專案一零組件繪圖</span>, 並提供零組件下載</span></p>
<p><span>F: 是否將自行繪製的專案一零組件<span>轉入 CoppeliaSim</span></span></p>
<p><span>G: 是否利用<span> </span><span>ZMQ Remote API Python</span><span> </span>對專案一轉入的零組件設定感測器, 並進行<span>鋼球永動模擬</span></span></p>
<p><span>H: 是否實際操作<span> </span><span>Triangle 軌道系統</span>的鋼球永動模擬</span></p>
<p><span>I: 是否完成 W15 的平面雙 U 迴路上的<span>鋼球永動系統繪圖、轉檔與系統模擬</span></span></p>
<p><span>J: 是否使用所分配的 CAD 套件完成<span>專案二 1D 平台零組件繪圖</span>, 並提供零組件下載</span></p>
<p><span>K: 是否利用<span> </span><span>ZMQ Remote API Python</span><span> </span>對專案二轉入的零組件設定感測器, 並進行鋼球永動模擬</span></p>
<p><span>L: 是否針對專案二的 1D 平台鋼球平衡系統所需的<span> </span><span>PID 控制理論</span>進行資料收集與 ChatGPT 對答</span></p>
<p><span></span></p>
<p><span>已完成: A,B,C(本組只有replit),D(Solidworks),E,F,G(可模擬但無法永動),I,J,K(可模擬但無法永動)</span></p>
<h2>41123135</h2>
<p><span>(</span>✔<span>)A: 是否按照進度明確標示倉儲的改版歷程</span></p>
<p><span>(✔)B: 是否根據<span> </span><span>IPv4 與 IPv6</span><span> </span>網路環境設定進行作法討論</span></p>
<p><span>(✔)C: 是否就<span><span> </span>Replit、s.cycu.org 與 localhost</span><span> </span>情境下對個人與分組倉儲進行設定操作     </span></p>
<p><span>(✔)D: 是否就所分配的<span> </span><span>CAD 套件</span>從安裝設定到繪圖提供內容參考</span></p>
<p><span>(✔)E: 是否使用所分配的 CAD 套件完成<span>專案一零組件繪圖</span>, 並提供零組件下載</span></p>
<p><span>(✔)F: 是否將自行繪製的專案一零組件<span>轉入 CoppeliaSim</span></span></p>
<p><span>(✔</span><span>)G: 是否利用<span> </span><span>ZMQ Remote API Python</span><span> </span>對專案一轉入的零組件設定感測器, 並進行<span>鋼球永動模擬</span></span></p>
<p><span>(✔)H: 是否實際操作<span> </span><span>Triangle 軌道系統</span>的鋼球永動模擬</span></p>
<p><span>(✔)I: 是否完成 W15 的平面雙 U 迴路上的<span>鋼球永動系統繪圖、轉檔與系統模擬</span></span></p>
<p><span>(✔)J: 是否使用所分配的 CAD 套件完成<span>專案二 1D 平台零組件繪圖</span>, 並提供零組件下載</span></p>
<p><span>(✘)K: 是否利用<span> </span><span>ZMQ Remote API Python</span><span> </span>對專案二轉入的零組件設定感測器, 並進行鋼球永動模擬</span></p>
<p><span>(✘)L: 是否針對專案二的 1D 平台鋼球平衡系統所需的<span> </span><span>PID 控制理論</span>進行資料收集與 ChatGPT 對答</span></p>
<p><span></span></p>
<p><span></span>自我評分:69</p><h1>小組名單</h1>
<p>41123135 黃昱閔</p>
<p>41123139 楊力維</p>
<p>41123131 陳冠豪</p>
<p>41123149 蕭宇森</p>
<p>41123134 湯梓峰</p>
<p>41123122 高晟峰</p>
<p>41123101 田芸熏</p>
<p>41123102 張心瑜</p>
<p>41123107 王麒瑋</p>
<h1>座位排序程式</h1>
<h2>排序程式</h2>
<p><a href="https://mde.tw/cadnote/content/Brython.html?src=https://gist.githubusercontent.com/mdecycu/9215c7c160119721ded887018cda8f4e/raw/6aa687555226885c935927bffaab3f9a81b513a3/w13_2a_seat_html.py">排序程式</a></p>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false"># Brython code starts
from browser import document, html

# get output html location
brython_div = document["brython_div1"]
brython_div &lt;= html.P(id="output_table")

# Replace this line with the actual file content
file_content = open("https://mde.tw/cadnote/downloads/2a_w12_seat.txt").read()

# Create a dictionary to store student numbers and seat numbers
seat_map = {}

# Process each line of the file content
for line in file_content.splitlines():
    # Split each line using tabs
    elements = line.split("\t")

    # If the line contains seat information
    if len(elements) == 2 and "(" in elements[1]:
        # Extract student number and seat information
        stud_num = elements[0].strip()
        seat_info = elements[1].strip()

        # Add student number and seat information to the dictionary
        seat_map[stud_num] = seat_info

# Find the maximum row and column values
max_row = max(int(seat_info[1]) for seat_info in seat_map.values())
max_col = max(int(seat_info[3]) for seat_info in seat_map.values())

# Initialize a 2D list to represent the seating arrangement
seating_arrangement = [["空位"] * max_col for _ in range(max_row)]

# Populate the seating arrangement with student information
for stud_num, seat_info in seat_map.items():
    row = int(seat_info[1]) - 1
    col = int(seat_info[3]) - 1
    seating_arrangement[row][col] = f"座位號: {seat_info}, 學號: {stud_num}"

# Display the result in the HTML document
result_html = "&lt;table&gt;"
for row in seating_arrangement:
    result_html += "&lt;tr&gt;"
    for cell_content in row:
        result_html += f"&lt;td&gt;{cell_content}&lt;/td&gt;"
    result_html += "&lt;/tr&gt;"
result_html += "&lt;/table&gt;"

# Update the HTML content with the result
document["output_table"].html = result_html
# Brython code ends
</pre>
<p></p>
<h2>執行結果</h2>
<table style="width: 582px;">
<tbody>
<tr>
<td style="width: 59px;">座位號: (1,1), 學號: 41123123</td>
<td style="width: 59px;">座位號: (1,2), 學號: 41123119</td>
<td style="width: 59px;">座位號: (1,3), 學號: 41123105</td>
<td style="width: 59px;">座位號: (1,4), 學號: 41123152</td>
<td style="width: 59px;">座位號: (1,5), 學號: 41123120</td>
<td style="width: 59px;">座位號: (1,6), 學號: 41123108</td>
<td style="width: 59px;">座位號: (1,7), 學號: 41123145</td>
<td style="width: 59.2px;">座位號: (1,8), 學號: 41123137</td>
<td style="width: 58.8px;">座位號: (1,9), 學號: 41123130</td>
</tr>
<tr>
<td style="width: 59px;">座位號: (2,1), 學號: 41123140</td>
<td style="width: 59px;">座位號: (2,2), 學號: 41123150</td>
<td style="width: 59px;">座位號: (2,3), 學號: 41123124</td>
<td style="width: 59px;">空位</td>
<td style="width: 59px;">座位號: (2,5), 學號: 41136123</td>
<td style="width: 59px;">座位號: (2,6), 學號: 41123148</td>
<td style="width: 59px;">座位號: (2,7), 學號: 41123116</td>
<td style="width: 59.2px;">座位號: (2,8), 學號: 41123146</td>
<td style="width: 58.8px;">空位</td>
</tr>
<tr>
<td style="width: 59px;">座位號: (3,1), 學號: 41123139</td>
<td style="width: 59px;">座位號: (3,2), 學號: 41123131</td>
<td style="width: 59px;">座位號: (3,3), 學號: 41123135</td>
<td style="width: 59px;">座位號: (3,4), 學號: 41123149</td>
<td style="width: 59px;">座位號: (3,5), 學號: 41123122</td>
<td style="width: 59px;">座位號: (3,6), 學號: 41123134</td>
<td style="width: 59px;">座位號: (3,7), 學號: 41123107</td>
<td style="width: 59.2px;">座位號: (3,8), 學號: 41123101</td>
<td style="width: 58.8px;">座位號: (3,9), 學號: 41123102</td>
</tr>
<tr>
<td style="width: 59px;">座位號: (4,1), 學號: 41123128</td>
<td style="width: 59px;">座位號: (4,2), 學號: 41123117</td>
<td style="width: 59px;">座位號: (4,3), 學號: 41123114</td>
<td style="width: 59px;">座位號: (4,4), 學號: 41123126</td>
<td style="width: 59px;">座位號: (4,5), 學號: 41123115</td>
<td style="width: 59px;">座位號: (4,6), 學號: 41123111</td>
<td style="width: 59px;">空位</td>
<td style="width: 59.2px;">座位號: (4,8), 學號: 41123112</td>
<td style="width: 58.8px;">空位</td>
</tr>
<tr>
<td style="width: 59px;">座位號: (5,1), 學號: 41123144</td>
<td style="width: 59px;">座位號: (5,2), 學號: 41123141</td>
<td style="width: 59px;">座位號: (5,3), 學號: 41123143</td>
<td style="width: 59px;">座位號: (5,4), 學號: 41123129</td>
<td style="width: 59px;">空位</td>
<td style="width: 59px;">空位</td>
<td style="width: 59px;">座位號: (5,7), 學號: 41023134</td>
<td style="width: 59.2px;">座位號: (5,8), 學號: 41023156</td>
<td style="width: 58.8px;">座位號: (5,9), 學號: 41023155</td>
</tr>
<tr>
<td style="width: 59px;">座位號: (6,1), 學號: 40923118</td>
<td style="width: 59px;">座位號: (6,2), 學號: 41123154</td>
<td style="width: 59px;">座位號: (6,3), 學號: 41123153</td>
<td style="width: 59px;">空位</td>
<td style="width: 59px;">座位號: (6,5), 學號: 41023245</td>
<td style="width: 59px;">座位號: (6,6), 學號: 41023246</td>
<td style="width: 59px;">空位</td>
<td style="width: 59.2px;">座位號: (6,8), 學號: 40923127</td>
<td style="width: 58.8px;">座位號: (6,9), 學號: 40923213</td>
</tr>
</tbody>
</table>
<h1>HW</h1>
<h2>replit</h2>
<p>1.登入replit，在My Repls中進去想維護的網站</p>
<p><img alt="" height="333" src="/images/1.png" width="500"/></p>
<p>2.點擊RUN開啟動態網站</p>
<p><img alt="" height="226" src="/images/2.png" width="500"/></p>
<p>3.執行完畢後點擊New tab 會開出新的分頁(動態網站)</p>
<p><img alt="" height="273" src="/images/3.png" width="500"/></p>
<p>4.登入動態網站</p>
<p><img alt="" height="223" src="/images/4.png" width="500"/></p>
<p>5.維護完成按save存檔，並按Convent轉成靜態</p>
<p><img alt="" height="226" src="/images/5.png" width="500"/></p>
<p>6.回到replit中的git頁面，輸入備註完成後按下確定</p>
<p><img alt="" height="298" src="/images/6.png" width="500"/></p>
<p>7.進行Pusn回去github</p>
<p><img alt="" height="293" src="/images/7.png" width="500"/></p>
<p>8.完成更新網站</p>
<h1>每周工作</h1>
<h2>W6</h2>
<p>10/20</p>
<p>41123135:建立網站、更新小組名單</p>
<p>41123122:建立網站、更新小組名單</p>
<p><img alt="" src="/images/index.html"/></p>
<h1>任務一</h1>
<p></p>
<h2>各部位零件檔</h2>
<p><a href="https://nfuedu-my.sharepoint.com/:f:/g/personal/41123122_nfu_edu_tw/EkwjGE3ZiAdFo8B7Zlg9HvMBOc-sL_evC9p5JORFR_69eQ?e=lVFckp">檔案連結</a></p>
<p><img alt="" height="359" src="/images/399627473_6758641800883630_6889701167395590650_n.gif" width="531"/></p>
<h1>任務二</h1>
<h2>各部位零件檔</h2>
<p><a href="https://nfuedu-my.sharepoint.com/personal/41123122_nfu_edu_tw/_layouts/15/onedrive.aspx?id=%2Fpersonal%2F41123122%5Fnfu%5Fedu%5Ftw%2FDocuments%2F%E5%B0%88%E6%A1%88%E4%BA%8C&amp;ga=1">零件檔</a></p>
<h1>Brython</h1>
<p><a href="https://en.wikipedia.org/wiki/Python_(programming_language)">https://en.wikipedia.org/wiki/Python_(programming_language)</a></p>
<h4>Examples:</h4>
<p style="padding-left: 30px;"><a href="https://gist.github.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d">https://gist.github.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d</a></p>
<p style="padding-left: 30px;"><a href="https://www.geeksforgeeks.org/python-programming-examples/">https://www.geeksforgeeks.org/python-programming-examples/</a></p>
<p style="padding-left: 30px;"><a href="https://www.programiz.com/python-programming/examples">https://www.programiz.com/python-programming/examples</a></p>
<p style="padding-left: 30px;"><a href="https://www.freecodecamp.org/news/python-code-examples-sample-script-coding-tutorial-for-beginners/">https://www.freecodecamp.org/news/python-code-examples-sample-script-coding-tutorial-for-beginners/</a></p>
<h4>Python Tutorial:</h4>
<p style="padding-left: 30px;"><a href="https://docs.python.org/3/tutorial/">https://docs.python.org/3/tutorial/</a></p>
<p style="padding-left: 30px;"><a href="https://docs.python.org/3/tutorial/introduction.html">An informal introduction to Python</a></p>
<h4>Indentation (Python 採 4 個 Spaces 縮排, 以界定執行範圍)</h4>
<h4>Variables (<a href="https://github.com/python/cpython/blob/3.11/Lib/keyword.py">Python Keywords</a>)</h4>
<h4>Comments (# 單行註解, 三個單引號或三個雙引號標註多行註解)</h4>
<h4><a href="https://docs.python.org/3/tutorial/introduction.html#numbers">Numbers</a> (整數 int(), 浮點數 float())</h4>
<h4><a href="https://docs.python.org/3/tutorial/introduction.html#strings">Strings</a> (字串)</h4>
<h4>print (Python 內建函式, <a href="https://docs.python.org/3/library/functions.html#print">print()</a> 函式)</h4>
<p><a href="https://docs.python.org/3/tutorial/controlflow.html">Python control flow tools</a></p>
<h4 style="padding-left: 30px;"><a href="https://docs.python.org/3/tutorial/controlflow.html#for-statements">for</a></h4>
<h4 style="padding-left: 30px;"><a href="https://docs.python.org/3/tutorial/controlflow.html#if-statements">if</a></h4>
<h4 style="padding-left: 30px;"><a href="https://docs.python.org/3/tutorial/controlflow.html#the-range-function">range</a></h4>
<h4>open</h4>
<h4>read</h4>
<h4><a href="https://docs.python.org/3/tutorial/introduction.html#lists">lists</a></h4>
<h4><a href="https://docs.python.org/3/tutorial/datastructures.html#tuples-and-sequences">tuples</a></h4>
<h4><a href="https://docs.python.org/3/tutorial/datastructures.html#dictionaries">dictionaries</a></h4>
<h4><a href="https://docs.python.org/3/tutorial/controlflow.html#defining-functions">functions</a></h4>
<h4><a href="https://docs.python.org/3/tutorial/errors.html#exceptions">try ... except</a></h4>
<h4><a href="https://docs.python.org/3/tutorial/controlflow.html#break-and-continue-statements-and-else-clauses-on-loops">break</a></h4>
<h4><a href="https://docs.python.org/3/tutorial/controlflow.html#pass-statements">pass</a></h4>
<h4><a href="https://docs.python.org/3/tutorial/classes.html?highlight=classes">classes</a></h4>
<p>這個頁面 demo 如何在同一頁面下納入多個線上 Ace 編輯器與執行按鈕 (<a href="/downloads/practice_html.txt">practice_html.txt</a> 動態頁面超文件).</p>
<p><a href="/downloads/practice_html.txt">practice_html.txt</a> 動態頁面超文件應該可以在啟動 Brython 時, 設定將 .py 檔案放入 downloads/py 目錄中引用.</p>
<p>亦即將所有對應的 html 也使用 Brython 產生, 然後寫為 <a href="https://docs.python.org/3/tutorial/classes.html">class</a> 後, 在範例導入時透過 <a href="https://docs.python.org/3/tutorial/classes.html#instance-objects">instance</a> 引用.</p>
<pre class="brush:html;auto-links:false;toolbar:false" contenteditable="false">&lt;!-- 啟動 Brython --&gt;
&lt;script&gt;
window.onload=function(){
brython({debug:1, pythonpath:['/static/','./../downloads/py/']});
}
&lt;/script&gt;</pre>
<p>從 1 累加到 100:</p>
<p><button id="add1to100">1 add to 100</button></p>
<p>將 iterable 與 iterator <a href="https://home.gamer.com.tw/creationDetail.php?sn=4337438">相關說明</a>, 利用 Brython 與 Ace Editor 整理在這個頁面.</p>
<!-- 導入 brython 程式庫 -->
<p>
<script src="/static/brython.js"></script>
<script src="/static/brython_stdlib.js"></script>
</p>
<!-- 啟動 Brython -->
<p>
<script>
window.onload=function(){
brython({debug:1, pythonpath:['/static/','./../downloads/py/']});
}
</script>
</p>
<p><!-- 導入 FileSaver 與 filereader --></p>
<p>
<script src="/static/ace/FileSaver.min.js" type="text/javascript"></script>
<script src="/static/ace/filereader.js" type="text/javascript"></script>
</p>
<p><!-- 導入 ace --></p>
<p>
<script src="/static/ace/ace.js" type="text/javascript"></script>
<script src="/static/ace/ext-language_tools.js" type="text/javascript"></script>
<script src="/static/ace/mode-python3.js" type="text/javascript"></script>
<script src="/static/ace/snippets/python.js" type="text/javascript"></script>
</p>
<p><!-- 導入 gearUtils-0.9.js Cango 齒輪繪圖程式庫 -->
<script src="/static/Cango-24v03-min.js"></script>
<script src="/static/gearUtils-09.js"></script>
<script src="/static/SVGpathUtils-6v03-min.js"></script>
<script src="/static/sylvester.js"></script>
<script src="/static/PrairieDraw.js"></script>
</p>
<p><!-- 請注意, 這裡使用 Javascript 將 localStorage["kw_py_src1"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱--></p>
<p>
<script type="text/javascript">
function doSave(storage_id, filename){
    var blob = new Blob([localStorage[storage_id]], {type: "text/plain;charset=utf-8"});
    filename = document.getElementById(filename).value
    saveAs(blob, filename+".py");
}
</script>
</p>
<p>
<script type="text/python3">
from browser import document as doc
import ace
# 清除畫布
def clear_bd1(ev):
    bd = doc["brython_div1"]
    bd.clear()
Ace1 = ace.Editor(editor_id="kw_editor1", console_id="kw_console1", container_id="kw__container1", storage_id="kw_py_src1" )
# 從 gist 取出程式碼後, 放入 editor 作為 default 程式
def run1():
    # 利用 get 取下 src 變數值
    try:
        url = doc.query["src"]
    except:
        url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c3a6deaf717f8f2739a4b1392a5ab10936e9693a/from_1_add_to_10_1.py"
    prog = open(url).read()

    # 將程式載入編輯區
    Ace1.editor.setValue(prog)
    Ace1.editor.scrollToRow(0)
    Ace1.editor.gotoLine(0)
    # 直接執行程式
    #ns = {'__name__':'__main__'}
    #exec(prog, ns)
    # 按下 run 按鈕
    Ace1.run()

# 執行程式, 顯示輸出結果與清除輸出結果及對應按鈕綁定
doc['kw_run1'].bind('click', Ace1.run)
doc['kw_show_console1'].bind('click', Ace1.show_console)
doc['kw_clear_console1'].bind('click', Ace1.clear_console)
doc['clear_bd1'].bind('click', clear_bd1)
# 呼叫函式執行
run1()
</script>
</p>
<p><!-- add 1 to 100 開始 -->
<script type="text/python3">
from browser import document as doc
import ace

# 清除畫布
def clear_bd1(ev):
    bd = doc["brython_div1"]
    bd.clear()

# 利用 ace 中的 Editor 建立 Ace2 物件, 其中的輸入變數分別對應到頁面中的編輯區物件
Ace2 = ace.Editor(editor_id="kw_editor1", console_id="kw_console1", container_id="kw__container1", storage_id="kw_py_src1" )

add1to100_url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c48e37714f055c3a0027cbfef59e442a6ef659b9/from_1_add_to_100_1.py"

# 從 gist 取得程式碼
add_src = open(add1to100_url).read()
def add(ev):
    Ace2.editor.setValue(add_src)
    Ace2.editor.scrollToRow(0)
    Ace2.editor.gotoLine(0)
    Ace2.run()

# id 為 "add1to100" 的按鈕點按時, 執行 add 方法
doc["add1to100"].bind('click', add)
</script>
</p>
<p><!-- add 1 to 100 結束--></p>
<!-- editor1 開始 -->
<p><!-- 用來顯示程式碼的 editor 區域 --></p>
<div id="kw_editor1" style="width: 600px; height: 300px;"></div>
<p><!-- 以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合 --></p>
<p><!-- 存擋表單開始 --></p>
<form><label>Filename: <input id="kw_filename" placeholder="input file name" type="text"/>.py</label> <input onclick="doSave('kw_py_src1', 'kw_filename1');" type="submit" value="Save"/></form>
<p><!-- 存擋表單結束 --></p>
<p></p>
<p><!-- 執行與清除按鈕開始 --></p>
<p><button id="kw_run1">Run</button> <button id="kw_show_console1">Output</button> <button id="kw_clear_console1">清除輸出區</button><button id="clear_bd1">清除繪圖區</button><button onclick="window.location.reload()">Reload</button></p>
<p><!-- 執行與清除按鈕結束 --></p>
<p></p>
<p><!-- 程式執行 ouput 區 --></p>
<div style="width: 100%; height: 100%;"><textarea autocomplete="off" id="kw_console1"></textarea></div>
<p><!-- Brython 程式執行的結果, 都以 brython_div1 作為切入位置 --></p>
<div id="brython_div1"></div>
<!-- editor1 結束 --><hr/><!-- ########################################## -->
<p>從 1 累加到 100 part2:</p>
<p><button id="add1to100part2">1 add to 100</button><button id="cango_three_gears">cango_three_gears</button><button id="bsnake">BSnake</button><button id="aitetris">AI Tetris</button><button id="threejsblock">Rotating Block</button></p>
<p><!-- 請注意, 這裡使用 Javascript 將 localStorage["kw_py_src2"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱--></p>
<p>
<script type="text/python3">
from browser import document as doc
import ace
# 清除畫布
def clear_bd2(ev):
    bd = doc["brython_div2"]
    bd.clear()
Ace3 = ace.Editor(editor_id="kw_editor2", console_id="kw_console2", container_id="kw__container2", storage_id="kw_py_src2" )
# 從 gist 取出程式碼後, 放入 editor 作為 default 程式
def run2():
    # 利用 get 取下 src 變數值
    try:
        url = doc.query["src2"]
    except:
        url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c3a6deaf717f8f2739a4b1392a5ab10936e9693a/from_1_add_to_10_1.py"
    prog = open(url).read()

    # 將程式載入編輯區
    Ace3.editor.setValue(prog)
    Ace3.editor.scrollToRow(0)
    Ace3.editor.gotoLine(0)
    # 直接執行程式
    #ns = {'__name__':'__main__'}
    #exec(prog, ns)
    # 按下 run 按鈕
    Ace3.run()

# 執行程式, 顯示輸出結果與清除輸出結果及對應按鈕綁定
doc['kw_run2'].bind('click', Ace3.run)
doc['kw_show_console2'].bind('click', Ace3.show_console)
doc['kw_clear_console2'].bind('click', Ace3.clear_console)
doc['clear_bd2'].bind('click', clear_bd2)
# 呼叫函式執行
run2()
</script>
</p>
<p><!-- add 1 to 100 part2 開始 -->
<script type="text/python3">
from browser import document as doc
import ace

# 清除畫布
def clear_bd2(ev):
    bd = doc["brython_div2"]
    bd.clear()

# 利用 ace 中的 Editor 建立 Ace2 物件, 其中的輸入變數分別對應到頁面中的編輯區物件
Ace4 = ace.Editor(editor_id="kw_editor2", console_id="kw_console2", container_id="kw__container2", storage_id="kw_py_src2" )

# 透過 Ace4 以類別建立一個通用的 button2, 可以在多個案例中將 gist 程導入編輯區

class button2:
    def __init__(self, url):
        self.url = url

    # 記得加入 event 輸入變數
    def do(self,ev):
        Ace4.editor.setValue(open(self.url).read())
        Ace4.editor.scrollToRow(0)
        Ace4.editor.gotoLine(0)
        Ace4.run()

add1to100_url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c48e37714f055c3a0027cbfef59e442a6ef659b9/from_1_add_to_100_1.py"

# 從 gist 取得程式碼
add_src = open(add1to100_url).read()
def add2(ev):
    Ace4.editor.setValue(add_src)
    Ace4.editor.scrollToRow(0)
    Ace4.editor.gotoLine(0)
    Ace4.run()

# id 為 "add1to100part2" 的按鈕點按時, 執行 add 方法
doc["add1to100part2"].bind('click', add2)
# 以下為運用 button2 class 的通用 gist 程式導入區
################################## cango_three_gears start
cango_three_gears_url = "https://gist.githubusercontent.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d/raw/f7a85d737d6723d5e34c526d5daee990ed92c32b/cango_three_gears_brython_div2.py"
cango_three_gears = button2(cango_three_gears_url)
doc["cango_three_gears"].bind("click", cango_three_gears.do)
################################## cango_three_gears end
################################## bsnake start
bsnake_url = "https://gist.githubusercontent.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d/raw/f7a85d737d6723d5e34c526d5daee990ed92c32b/kmol_snakey.py"
bsnake = button2(bsnake_url)
doc["bsnake"].bind("click", bsnake.do)
################################## bsnake end
################################## aitetris start
aitetris_url = "https://gist.githubusercontent.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d/raw/f7a85d737d6723d5e34c526d5daee990ed92c32b/pygame_to_brython_tetris_ai.py"
aitetris = button2(aitetris_url)
doc["aitetris"].bind("click", aitetris.do)
################################## aitetris end
################################## threejsblock start
threejsblock_url = "https://gist.githubusercontent.com/mdecycu/2c6323eff49b496d1bafd210f3ec9707/raw/df37802f9e8a386b6424f7945af622b1cd0a9ca5/threejs_rotating_block.py"
threejsblock = button2(threejsblock_url)
doc["threejsblock"].bind("click", threejsblock.do)
################################## threejsblock end
</script>
</p>
<p><!-- add 1 to 100 part2 結束--></p>
<!-- editor2 開始 -->
<p><!-- 用來顯示程式碼的 editor 區域 --></p>
<div id="kw_editor2" style="width: 600px; height: 300px;"></div>
<p><!-- 以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合 --></p>
<p><!-- 存擋表單開始 --></p>
<form><label>Filename: <input id="kw_filename2" placeholder="input file name" type="text"/>.py</label> <input onclick="doSave('kw_py_src2', 'kw_filename2');" type="submit" value="Save"/></form>
<p><!-- 存擋表單結束 --></p>
<p></p>
<p><!-- 執行與清除按鈕開始 --></p>
<p><button id="kw_run2">Run</button> <button id="kw_show_console2">Output</button> <button id="kw_clear_console2">清除輸出區</button><button id="clear_bd2">清除繪圖區</button><button onclick="window.location.reload()">Reload</button></p>
<p><!-- 執行與清除按鈕結束 --></p>
<p></p>
<p><!-- 程式執行 ouput 區 --></p>
<div style="width: 100%; height: 100%;"><textarea autocomplete="off" id="kw_console2"></textarea></div>
<p><!-- Brython 程式執行的結果, 都以 brython_div1 作為切入位置 --></p>
<div id="brython_div2"></div>
<!-- editor2 結束 --><hr/>
<p>
<script src="https://unpkg.com/three@0.144.0/build/three.js" type="text/javascript"></script>
</p>